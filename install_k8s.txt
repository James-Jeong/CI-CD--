sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

sudo bash -c \
'cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF'

sudo sysctl --system
#sudo lsmod | grep br_netfilter

sudo bash -c \
'cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF'

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
sudo systemctl enable kubelet && sudo systemctl start kubelet

-------------------------

@ kubelet 오류 발생 시
1) [centos@ip-172-31-46-40 ~]$ sudo docker info | grep -i cgroup
 Cgroup Driver: cgroupfs
 Cgroup Version: 1
 
# cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"]
}
EOF

2) ERROR CRI]: container runtime is not running: output: time="2022-05-04T04:40:43Z" level=fatal msg="getting status of runtime: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.RuntimeService"

sudo vi /etc/containerd/config.toml
> Comment disabled_plugins = ["cri"] if exist in config.toml
sudo systemctl restart containerd

-------------------------------------------------

@@ MASTER NODE

sudo kubeadm init --pod-network-cidr=10.244.0.0/16
sudo kubeadm config images pull

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

kubectl get nodes
kubectl get pods -A -o wide

-------------------------

@ RESET (init, join 모두 초기화)
sudo kubeadm reset
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
sudo systemctl restart kubelet

-------------------------
@ ROLE
- 부여
kubectl label node [node-name] node-role.kubernetes.io/[label-name]=[label-name] --overwrite
> kubectl label node ip-172-31-40-129.ap-northeast-2.compute.internal node-role.kubernetes.io/worker-1=worker-1 --overwrite

- 삭제
kubectl label node [node-name] node-role.kubernetes.io/[label-name]-

-------------------------

@ Master 노드에서 worker 노드 지우기
kubectl delete node [노드 이름] (> kubectl get nodes 명령어 조회 결과)
kubectl delete node $(kubectl get nodes | grep NotReady | awk '{print $1;}')

-------------------------------------------------

@@ WORKER NODE
sudo kubeadm join [마스터 노드 IP]:[마스 노드 listen port] --token [토큰값] --discovery-token-ca-cert-hash [토큰 해쉬값]
> 명령어 수행하기 전에 MASTER NODE 인바운드 규칙에 TCP 6443, 8080 포트 허용 필요
